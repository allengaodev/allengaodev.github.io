<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>開發空間</title>
		<link>https://blog.allengaodev.com/</link>
		<description>透過筆記和測試，深入 .Net 技術的世界，探索最新的開發工具和技能。</description>
		<copyright>© 2024 by Allen Gao</copyright>
		<managingEditor>allengaodev@gmail.com</managingEditor>
		<pubDate>Sun, 15 Dec 2024 17:39:03 GMT</pubDate>
		<lastBuildDate>Sun, 15 Dec 2024 17:39:03 GMT</lastBuildDate>
		<item>
			<title>Castle Core 模組介紹：Logging、DictionaryAdapter 與 DynamicProxy 實作</title>
			<link>https://blog.allengaodev.com/posts/castle-core-basic</link>
			<description>了解 Castle Core 提供的三大功能：Logging、DictionaryAdapter 與 DynamicProxy，包含功能背景、使用案例及非同步攔截器的實作方法，學習實做 AOP。</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/castle-core-basic</guid>
			<pubDate>Sat, 14 Dec 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>ABP IO 教學 | 模組化架構入門：領域層級 - Part 2</title>
			<link>https://blog.allengaodev.com/posts/abp-io-tutorials-from-scratch-domain-layer</link>
			<description>本篇文章深入解析 ABP.IO 框架的模組化架構進階設計，專注於 Domain Layer 的設計與實作，並詳細介紹如何利用 ABP 提供的 Building Blocks，如 Entity、Domain Service 等，來實現符合 DDD 原則的核心功能。同時，我們將透過建立測試專案驗證 Domain 層的功能完整性，並介紹如何有效運用 ABP 的測試工具提升開發效率。</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/abp-io-tutorials-from-scratch-domain-layer</guid>
			<pubDate>Wed, 11 Dec 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>ABP IO 教學 | 模組化架構入門：設計與實踐 - Part 1</title>
			<link>https://blog.allengaodev.com/posts/abp-io-tutorials-from-scratch-module-design-and-lifecycle</link>
			<description>本篇文章深入解析 ABP.IO 框架的模組化設計原理，從零開始建立一個全新的模組系統，全面覆蓋分層設計、模組生命週期與 ABP 的依賴管理機制。透過實際範例與詳細步驟，幫助開發者掌握 Domain、Application、Infrastructure 等層級的架構設計，並了解如何運用 ABP 提供的模組化框架來開發高效、可擴展的 .NET 應用程式。初學者能在這篇文章中找到最佳實踐建議。</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/abp-io-tutorials-from-scratch-module-design-and-lifecycle</guid>
			<pubDate>Sun, 08 Dec 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Effective SQL 02.消除重複儲存資料</title>
			<link>https://blog.allengaodev.com/posts/effective-sql-02</link>
			<description>Effective SQL 02.消除重複儲存資料 (Eliminate Redundant Storage of Data Items)</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/effective-sql-02</guid>
			<pubDate>Tue, 03 Dec 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Effective SQL 01.確定所有資料表都有主鍵</title>
			<link>https://blog.allengaodev.com/posts/effective-sql-01</link>
			<description>Effective SQL 01.確定所有資料表都有主鍵 (Verify That All Tables Have a Primary Key)</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/effective-sql-01</guid>
			<pubDate>Mon, 02 Dec 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>More Effective C# 讀後總結與整理</title>
			<link>https://blog.allengaodev.com/posts/more-effective-csharp-summary</link>
			<description>More Effective C# 讀後總結與整理</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/more-effective-csharp-summary</guid>
			<pubDate>Sun, 01 Dec 2024 12:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>More Effective C# 50.考慮用分析器自動化慣用法</title>
			<link>https://blog.allengaodev.com/posts/more-effective-csharp-50</link>
			<description>More Effective C# 50.考慮用分析器自動化慣用法(Consider automating practices with Analyzers)</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/more-effective-csharp-50</guid>
			<pubDate>Sun, 01 Dec 2024 11:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>More Effective C# 49.參與規格及程式碼的訂定</title>
			<link>https://blog.allengaodev.com/posts/more-effective-csharp-49</link>
			<description>More Effective C# 49.參與規格及程式碼的訂定(Participate in Specs and Code)</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/more-effective-csharp-49</guid>
			<pubDate>Sat, 30 Nov 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>More Effective C# 48.尋求最好的答案，而不是最受歡迎的答案</title>
			<link>https://blog.allengaodev.com/posts/more-effective-csharp-48</link>
			<description>More Effective C# 48.尋求最好的答案，而不是最受歡迎的答案(Seek the best answer, not the most popular answer)</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/more-effective-csharp-48</guid>
			<pubDate>Sat, 30 Nov 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>More Effective C# 47.在公開的API中減少動態物件的使用</title>
			<link>https://blog.allengaodev.com/posts/more-effective-csharp-47</link>
			<description>More Effective C# 47.在公開的API中減少動態物件的使用(Minimize Dynamic Objects in Public APIs)</description>
			<author>allengaodev@gmail.com</author>
			<enclosure url="https://blog.allengaodev.com/assets/img/101night.avif" length="0" type="image" />
			<guid>https://blog.allengaodev.com/posts/more-effective-csharp-47</guid>
			<pubDate>Sat, 30 Nov 2024 00:00:00 GMT</pubDate>
			<content:encoded>False</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>